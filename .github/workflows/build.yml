name: Build Artifacts

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_call:

jobs:
  build:
    runs-on: windows-latest

    strategy:
      fail-fast: false
      matrix:
        build-type: [Debug, Release]
        include:
          - build-type: Debug
            build-preset: "Windows Debug x64"
            build-path: "windows-debug-x64"
          - build-type: Release
            build-preset: "Windows Release x64"
            build-path: "windows-release-x64"

    permissions:
      id-token: write
      contents: read
      attestations: write

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Export GitHub Actions Cache Environment Variables
      uses: actions/github-script@v7
      with:
        script: |
          core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
          core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');

    - name: Setup Ninja
      uses: ashutoshvarma/setup-ninja@master
      with:
        version: 1.11.0

    - name: Initialize MSVC Environment
      uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: ${{runner.arch}}

    - name: Configure CMake
      working-directory: ${{github.workspace}}
      env:
        VCPKG_BINARY_SOURCES: "clear;x-gha,readwrite"
      run: cmake --preset "${{matrix.build-preset}}"

    - name: Build
      working-directory: ${{github.workspace}}
      run: cmake --build "build/${{matrix.build-path}}"

    - name: Install
      working-directory: ${{github.workspace}}
      run: cmake --install "build/${{matrix.build-path}}"

    - name: Copy License to Artifacts Path
      working-directory: ${{github.workspace}}
      shell: pwsh
      run: Copy-Item "./LICENSE.md" -Destination "./install/${{matrix.build-path}}/usr/bin/"

    - name: Find Binary Files
      id: find-binary
      working-directory: ${{github.workspace}}
      shell: pwsh
      run: |
        $result = (./scripts/ci/find-binary.ps1 -DirectoryPath "./install/${{matrix.build-path}}/usr/bin/") | Out-String
        $outputString = "exec_files=$result"
        $outputString | Out-File -FilePath $env:GITHUB_OUTPUT -Append
        Write-Host "Found executable and dynamic library files: $result"

    - name: Generate Artifact Attestation
      if: github.event_name != 'pull_request'
      uses: actions/attest-build-provenance@v1
      with:
        subject-path: '${{steps.find-binary.outputs.exec_files}}'

    - name: List Files
      working-directory: ${{github.workspace}}
      shell: pwsh
      run: |
        $directoryPath = "./install/${{matrix.build-path}}/usr/bin/"
        Get-ChildItem -Path $directoryPath -Recurse | Select-Object Name, FullName, Length, CreationTime, LastWriteTime | Write-Host

    - name: Get Short SHA
      uses: benjlevesque/short-sha@v3.0
      id: short-sha
      with:
        length: 7

    - name: Archive Artifacts
      if: github.event_name != 'pull_request'
      uses: actions/upload-artifact@v4
      with:
        name: pdf4qt-${{runner.os}}-${{runner.arch}}-${{matrix.build-type}}-${{steps.short-sha.outputs.sha}}
        path: |
          install/${{matrix.build-path}}/usr/bin/**
        compression-level: 9
        if-no-files-found: error

    - name: Archive Artifacts (Not Signed)
      if: github.event_name == 'pull_request'
      uses: actions/upload-artifact@v4
      with:
        name: pdf4qt-${{runner.os}}-${{runner.arch}}-${{matrix.build-type}}-${{steps.short-sha.outputs.sha}}-Unsafe
        path: |
          install/${{matrix.build-path}}/usr/bin/**
        compression-level: 9
        if-no-files-found: error